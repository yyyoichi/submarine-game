syntax = "proto3";
// import "google/protobuf/timestamp.proto";

package api.v1;
option go_package = "github.com/yyyoichi/submarine-game/internal/gen/api/v1;apiv1";

service GameService {
  // 対戦する
  rpc Join(JoinRequest) returns (stream JoinResponse) {}
  // 対戦から離れる
  rpc Leave(LeaveRequest) returns (LeaveResponse) {}
  // 行動履歴を取得する
  rpc History(HistoryRequest) returns (HistoryResponse) {}
  // 初回の行動する
  rpc FirstAction(FirstActionRequest) returns (FirstActionResponse) {}
  // 行動する
  rpc Action(ActionRequest) returns (ActionResponse) {}
  // 相手の行動を待機する
  rpc Wait(WaitRequest) returns (stream WaitResponse) {}
}

message JoinRequest {
}

message JoinResponse {
  string game_id = 1;
  string user_id = 2;
}

message LeaveRequest {
  string game_id = 1;
  string user_id = 2;
}

message LeaveResponse {}

message HistoryRequest {
  string game_id = 1;
  string user_id = 2;
}

message HistoryResponse {
  message Camp {
    repeated CampStatus status = 1;
    uint32 camp = 2;
  }
  message Line {
    repeated Camp camps = 1;
  }
  repeated Line camps = 1; // 海域情報
  bool my_turn = 2; // 自分のターンか
  string winner = 3; // 勝利者
  repeated History histories = 4; // 行動履歴
  int64 timeout = 5; // 行動期限
  string description = 6; // 説明
}

message FirstActionRequest {
  string game_id = 1;
  string user_id = 2;
  repeated uint32 camp = 3; // 初回行動場所
  repeated uint32 mine_camps = 4; // 機雷敷設場所
}
message FirstActionResponse {}

message ActionRequest {
  string game_id = 1;
  string user_id = 2;
  uint32 camp = 3; // 行動場所
  ActionType type = 4; // 行動内容
}
message ActionResponse {}

message WaitRequest {
  string game_id = 1;
  string user_id = 2;
}

message WaitResponse {
  bool done = 1; // 相手の行動終了
}

message History {
  string user_id = 1; // 行動ユーザ
  int32 turn = 2; // 行動順
  uint32 camp = 3; // 行動場所
  ActionType type = 4; // 行動内容
  string description = 5; // 行動内容説明
  string impact = 6; // 相手攻撃の影響 
}

enum ActionType {
  ACTION_TYPE_UNSPECIFIED = 0;
  ACTION_TYPE_MOVE = 1; // 移動
  ACTION_TYPE_BOMB = 2; // ボム
  ACTION_TYPE_LEAVE = 3; // 中断
  ACTION_TYPE_PLACE = 4; // 配置
  ACTION_TYPE_MINE = 5; // 制御水雷
}

enum CampStatus {
  CAMP_STATUS_UNSPECIFIED = 0;
  CAMP_STATUS_MOVE = 1; // 移動可能
  CAMP_STATUS_BOMB = 2; // 魚雷発射可能
  CAMP_STATUS_ISLAND = 3; // 島
  CAMP_STATUS_PLACE = 4; // 配置可能
  CAMP_STATUS_SUBMARINE = 5; // 位置
  CAMP_STATUS_MINE = 6; // 制御水雷敷設場所
}


service HelloService {
	rpc Say(SayRequest) returns (SayResponse) {}
}

message SayRequest {
  string name = 1;
}

message SayResponse {
  string hello = 1;
}